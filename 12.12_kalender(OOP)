#Andsin endast parima, et miskit objekti ümber kirjutada. Hindaksin väga veidi sinupoolset abi selle osas. 

from tkinter import *
import tkinter as tk
from tkinter import ttk
from tkinter import messagebox, OptionMenu
import calander
import tund
import labels


class Programm(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)
        self.title('Ajaplaneerija')

        kalender = Frame(self)
        kalender.pack(side=RIGHT)
        sisendid = Frame(self)
        sisendid.pack(side=LEFT)

        Label(sisendid, text='1. Vali produktiivseim aeg töötamiseks: ').grid(row=0, column=0, columnspan=2, sticky=N+W)
        Label(sisendid, text='Tööaja algus:').grid(row=1, column=0, columnspan=2, sticky=N + W)
        kella_algus = Entry(sisendid)
        kella_algus.configure(width=2)
        kella_algus.grid(row=1, column=0, padx=100, sticky=N + W)
        Label(sisendid, text='.00').grid(row=1, column=0, padx=130, sticky=N + W + S)

        Label(sisendid, text='Tööaja lõpp:').grid(row=2, column=0, sticky=N + W)
        kella_lõpp = Entry(sisendid)
        kella_lõpp.configure(width=2)
        kella_lõpp.grid(row=2, column=0, padx= 100, sticky=N + W)
        Label(sisendid, text='.00').grid(row=2, column=0, padx=130, sticky=N + W + S)

        nupp_kellaajad = Button(sisendid, text='Sisesta', width=25, command=self.kutsu_kellajad)
        nupp_kellaajad.grid(row=3, column=0, columnspan=2, sticky=N + W)

        # URLi sisestamine:
        Label(sisendid, text='2. Sisesta URL-aadress: ').grid(row=4, column=0, sticky=N+W)
        url = Entry(sisendid)  # relief=RIDGE
        url.grid(row=5, column=0, sticky=N + W)
        url.configure(width=25)
        nupp_url = Button(sisendid, text='Lisa kohustused', width=25, command=self.kutsu_url)
        nupp_url.grid(row=6, column=0,  sticky=N + W)

        # Uue ülesande nimi:
        Label(sisendid, text='3. Lisa uus ülesanne:').grid(row=7, column=0, pady=5, sticky=N+W) #FIXME: Tee boldiks
        Label(sisendid, text='Nimi:').grid(row=8, column=0, sticky=N+W)
        ülesanne = Entry(sisendid)
        ülesanne.grid(row=8, column=0, padx=55, sticky=N+W)

        #Uue ülesande ajakulu:
        Label(sisendid, text='Ajakulu:').grid(row=9, column=0, sticky=N+W)
        ajakulu = Entry(sisendid)
        ajakulu.configure(width=3)
        ajakulu.grid(row=9, column=0, padx=55, sticky=N+W)
        Label(sisendid, text='tundi (0.5h kaupa)').grid(row=9, column=0, padx=100, sticky=N+W+S)

        #Uue ülesande jagamine #FIXME: Kas drop menu või käsitsi sisestus?
        alg_tükeldamine = StringVar(self)
        alg_tükeldamine.set('Vali kordade arv:')
        Label(sisendid, text='Töö tükeldamine:').grid(row=10, column=0, sticky=N+W)
        tükeldamine = OptionMenu(sisendid, alg_tükeldamine, '1 kord', '2 korda', '3 korda', '4 korda',
                                 '5 korda', '6 korda')
        tükeldamine.grid(row=10, column=0, padx=120, sticky=N+W)

        #Mis päevaks?
        alg_tähtaeg = StringVar(self)
        alg_tähtaeg.set('Vali päev:')
        Label(sisendid, text='Tähtaeg:').grid(row=11, column=0, sticky=N+W)
        tähtaeg = OptionMenu(sisendid, alg_tähtaeg, 'Esmaspäev', 'Teisipäev', 'Kolmapäev',
                             'Neljapäev', 'Reede', 'Laupäev', 'Pühapäev')
        tähtaeg.grid(row=11, column=0, padx=60, sticky=N+W)

        #Uue ülesande callback (lisamisnupp):
        nupp_uus = Button(sisendid, text='Leia sobivad ajad', command=self.lisa_ülesanne)
        nupp_uus.grid(row = 12, column=0, sticky='nsew')

    def kutsu_kellajad(self):
        kellaajad(float(self.kella_algus.get()), float(self.kella_lõpp.get()))

    def kutsu_url(self):
        url_aadress(self.url.get())

    def lisa_ülesanne(self):
        #TODO: Mitu väärtust korraga get()iga.
        ...

def tabel(päeva_algus, päeva_lõpp):
    ridade_arv = int(abs(päeva_lõpp - päeva_algus) * 2 + 2)
    päevad = ['Esmaspäev', 'Teisipäev', 'Kolmapäev', 'Neljapäev', 'Reede', 'Laupäev', 'Pühapäev']

    rows = []
    for column in range(0, 7):
        cols = []
        i = 2
        for row in range(ridade_arv):
            if row == 0 and column in range(0, 7):
                label = Label(kalender, text=päevad[column])
            elif column == 0 and row == 0:
                label = Label(kalender, text='', borderwidth=0, width=8)
            else:
                if row != 0 and column != 0:
                    label = Label(text='', borderwidth=0, width=13)
                    # print(tund.Tund.tunnid)
                    for cls in tund.Tund.tunnid:
                        if cls.getWeekday() + 4 == column and cls.getTime() == str(päeva_algus - 1) + ':15':
                            label = Label(kalender, labels.Labels(cls.getLessonName(), cls.getTime(), cls.getLocation(),
                                                                  cls.getDescription(), cls.getDate()))
                            print(cls.getLessonName() + " " + str(päeva_algus - 1) + ':15')
                elif column == 0 and i % 2 == 0:
                    label = Label(kalender, text=str(päeva_algus - 1) + '.15')
                    i += 1
                else:
                    label = Label(kalender, text=str(päeva_algus - 1) + '.45')
                    päeva_algus += 1
                    i += 1
            label.grid(row=row, column=column, sticky='nsew')
            cols.append(label)
        rows.append(cols)

def kellaajad(kella_algus, kella_lõpp):
    calander.createEventList("http://www.is.ut.ee/pls/ois/ois.kalender?id_kalender=1595380087")
    # FIXME: See ei tööta enam nii nagu eelmisel testil.
    päeva_algus = int(float(kella_algus))
    päeva_lõpp = int(float(kella_lõpp))
    print(päeva_algus)
    if päeva_lõpp > päeva_algus and päeva_lõpp in range(2, 25) and päeva_algus in range(1, 24):
        tabel(päeva_algus, päeva_lõpp)
    else:
        if päeva_lõpp < päeva_algus:  # tekita messagebox
            messagebox.showwarning(title='Vigane sisend!',
                                   message='Sisestatud tööaja algus on hilisem kui tööaja lõpp! Sule aken ja proovi uuesti. ')
        if päeva_lõpp not in range(2, 25) and päeva_algus not in range(2, 24):
            messagebox.showwarning(title='Vigane sisend!',
                                   message='Sisestatud tööaja algus ning sisestatud tööaja lõpp ei olnud ajavahemikus 1-24. Sule aken ja proovi uuesti!')
        if päeva_lõpp not in range(2, 25) and päeva_algus in range(1, 24):
            messagebox.showwarning(title='Vigane sisend!', message='Sisestatud tööaja lõpp ei ole vahemikus 2-24.')
        if päeva_algus not in range(1, 24) and päeva_lõpp in range(2, 25):
            messagebox.showwarning(title='Vigane sisend!', message='Sisestatud tööaja algus ei ole vahemikus 1-23.')

def url_aadress(sisestus):
    sisestus = sisestus.split('=')
    if sisestus[0] == 'http://www.is.ut.ee/pls/ois/ois.kalender?id_kalender=' and sisestus[1].isnumeric() == True:
        return sisestus #FIXME: Not correct. Ajutine lahendus.
    else:
        messagebox.showwarning(title='Vigane URL-aadress!', message='Sisestatud URL ei ole korrektne. Proovi uuesti!')



app = Programm()
app.mainloop()
